la macchina di Turing vista fino ad adesso è cablata su uno specifico problema (tre tabella) -> macchina specifica

se si desidera risolvere n problemi si avrebbe bisogno di n macchine di turing 

sarebbe desiderabile una macchina di turing universale

bisogna che l'algoritmo (le tre tabelle) non siano più cablate nella macchina, ma che esso risieda nel nastro (mondo esterno). La parte hardware (cablata) della macchina 
di turing diventa quella che recupera l'algoritmo sul nastro. (caricamento del programma)

-> Macchina di turing universale!

questo richiede sapere descrivere l'algoritmo richiesto.
    -> occorre un linguaggio
    -> e una macchina (l'hardware cablato) che lo interpreti 

CONCLUSIONE: LA UTM è UN INTERPRETE DI UN LINGUAGGIO!!!     ->      AUTOMA ESECUTORE!!!

parallelo tra macchina di Turing e macchina di Von Neumann

NB: non c'è I/O nella macchina di Turing -> non concepisce il mondo esterno -> concepisco solo la computazione dei dati per raggiungere il risultato
-> come i dati siano finiti sul nastro non si sa -> l'obiettivo era solo rappresentare la computazione
CONCLUSIONE: l'I/O è una dimensione diversa dalla computazione.

COMPUTAZIONE E INTERAZIONE


Un linguaggio di programmazione comprende in verità (almeno) tre linguaggi
    - linguaggio di computazione (macchina di turing)
    - linguaggio di coordinazione (macchina di von neumann): definisce COME si legge/scrive verso l'esterno
        - linguaggio di comunicazione: dice che COSA leggo/scrivo verso l'esterno
NB: con la macchina di Turing, per adesso, ci interessa solo la dimensione del linguaggio di COMPUTAZIONE