Che cos'è un linguaggio?
Dice il dizionario: “Un linguaggio è un insieme di parole e di metodi di combinazione delle parole usate e comprese da una comunità di persone.”
    - insieme FINITO di parole
    - metodi di COMBINAZIONE di parole
    - compreso da comunità di persone
        -> un linguaggio serve a comunicare con ALTRI
NON BASTA!
È una definizione poco precisa:
    − non evita le ambiguità dei linguaggi naturali
    − non si presta a descrivere processi computazionali meccanizzabili
    − non aiuta a stabilire proprietà
Occorre una definizione di linguaggio meno evocativa e più precisa.

LINGUAGGIO COME SISTEMA FORMALE
che consenta di risponde a domande come:
    − quali sono le frasi lecite?
    − si può stabilire se una frase appartiene al linguaggio?
    − come si stabilisce il SIGNIFICATO di una frase?
    − quali elementi linguistici primitivi?

SINTASSI e SEMANTICA
    • Sintassi:     l’insieme di regole formali per la scrittura di frasi corrette («programmi») in un linguaggio, che dettano le modalità per costruire frasi corrette nel 
                    linguaggio stesso.
    • Semantica:    l’insieme dei significati da attribuire alle frasi (sintatticamente corrette) del linguaggio.
NB: Una frase può essere sintatticamente corretta e tuttavia non avere significato!

La sintassi è solitamente espressa tramite notazioni formali come
    • BNF, EBNF
    • diagrammi sintattici
La semantica è esprimibile:
    • a parole (poco precisa e ambigua)
    • mediante azioni
        → semantica operazionale
    • mediante funzioni matematiche
        → semantica denotazionale
    • mediante formule logiche
        → semantica assiomatica 

INTERPRETAZIONE vs COMPILAZIONE
    - interprete:   accetta in ingresso, ed esegue, una singola frase alla volta (si sottintende che la frase sia corta)
    - compilatore:  accetta in ingresso un intero, un intero programma
In realtà la differenza è sottile, un interprete porduce direttamente il risultato finale che ci si aspetta. Un compilatore produce un passaggio intermedio (codice assembly)
(la differenza è nell'occhio di chi osserva, se ci si apetta dell'assembly, anche un compilatore potrebbe essere considerato come un interprete) 

ANALISI LESSICALE, SINTATTICA e SEMANTICA
...
Un lessico è corretto se ogni parola (token) fa parte del vocabolario.
    -> Lexer -> se il codice passa questa fase, si ottiene  una serie di Token -> magari anche organizzati per categoria (numeri, stringhe, ...)

Una sintassi è corretta se la combinazione dei token è corretta (Il gattA mangiO)
    -> Parser -> alberi?

Semantica ...

DOMDANDA FONDAMENTALE: Che cosa significa dare significato ad una frase? 
    -> associare a quella frase un concetto, la frase evoca una esperienza passata -> FUNZIONE di mapping tra concetto e frase
Tale funzione deve quindi dare significato:
    • prima a ogni simbolo (carattere dell'alfabeto)
    • poi a ogni parola (sequenza lecita di caratteri)
    • infine a ogni frase (sequenza lecita di parole).

DEFINIZIONI
    - alfabeto
    - stringa
    - lunghezza di una stringa
    - stringa vuota (fastidiosa...ma necessaria)
    - linguaggio
    - frase
    - cardinalità di un linguaggio
        -> i linguaggio utili sono tipicamente con cardinalità infinita, o meglio illimitatamente espandibili. Non avrai mai in mano un programma infinito, tuttavia poui
           sempre allungare un programma. O meglio, i metodi di combinazione delle parole sono finiti, ma le combinazioni sono infinite. 
    - chiusura di un alfabeto

SPECIFICA DI UN LINGUAGGIO
come si specifica un linguaggio -> GRAMMATICA FORMALE

    VT  -> simboli terminali       = elementi dell'alfabeto
    VN  -> simboli non terminali   = simboli che servono a scrivere le regole
    P   -> Regole di produzione    = ...
    S   -> ...

Sentantial form -> frase in divenire

LINGUAGGIO GENERATO DA UNA GRAMMATICA
partendo dal simbolo s il linguaggio generato dalla grammatica è l'insieme di tutte le frasi generabili con tutte le regole della grammatica quante volte voglio (impreciso)

NB: quello che conta veramente di una grammatica sono le REGOLE DI PRODUZIONE -> scriveremo solo queste.

GRAMMATICHE EQUIVALENTI
In GENERALE stabilire se una grammatica è equivalente ad un'altre è un problema indecidibile.

FONDAMENTALE: GRAMMATICHE CON UNA DIVERSA STRUTTURA necessitano di MACCHINE DIVERSE PER ELABORARE I LINGUAGGI PRODOTTI

CLASSIFICAZIONE DI CHOMSKY
identifichiamo le grammatiche in quattro tipi, in ordine di complessità

Tipo 0
posso accorciare le frasi ...

Tipo 1
regole chirurgiche
vincolo: in pratica non posso accorciare le frasi
prevede anche vicoli cechi

Tipo 2, quello che ci interessa davvero
regole a grana grossa
Follia: si ritorna a poter accorciare le frasi, cosa? Qua me lo posso permettere perchè esiste un teorema che mi permette di tirar via epsilon. 

Tipo 3
le frasi crescono da una parte sola.
non ha idea del conteggio.

NB: Le grammatiche sono in relazione gerarchica

TEOREMA PER GRAMMATICHE DI TIPO 2 con epsilon.

la stringa vuota è utile perchè evita combinazioni. Pensa a (public static void), (private static void), (static void), ...

ELIMINAZIONE DELLE epsilon-RULES
...

TIPO DI UNA GRAMMATICA E TIPO DI UN LINGUAGGIO
Diremo che un linguaggio è di un certo tipo se troviamo la grammatica più semplice che lo descrive.

Intuitivamente, il tipo 1 è necessario quando bisogna scambiare qualcosa, dato che scambio implica che siamo in due. Il tipo 2 lavore solo su un simbolo non terminale alla
volta.

Allo stesso modo, il self embedding è la caratteristica fondamentale del tipo 2.

SELF EMBEDDING
...
serve per bilanciare parentesi, ecc...
